//
// UDMF Converter EE
// Copyright (C) 2017 Ioan Chera
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/
//
// Additional terms and conditions compatible with the GPLv3 apply. See the
// file COPYING-EE for details.
//
// Purpose: Mapping Doom line specials to UDMF
// Authors: Ioan Chera
//

#include <unordered_map>
#include "LineSpecialMapping.hpp"
#include "Helpers.hpp"

// FIXME: load EDF for this
#define EV_LOCKDEF_NULL        0
#define EV_LOCKDEF_REDCARD     1
#define EV_LOCKDEF_BLUECARD    2
#define EV_LOCKDEF_YELLOWCARD  3
#define EV_LOCKDEF_REDSKULL    4
#define EV_LOCKDEF_BLUESKULL   5
#define EV_LOCKDEF_YELLOWSKULL 6
#define EV_LOCKDEF_ANYKEY      100
#define EV_LOCKDEF_ALL6        101
#define EV_LOCKDEF_REDGREEN    129
#define EV_LOCKDEF_BLUE        130
#define EV_LOCKDEF_YELLOW      131
#define EV_LOCKDEF_ALL3        229

enum ClassicSpecial
{
   DRRaiseDoor =   1,
   W1OpenDoor =   2,
   W1CloseDoor =   3,
   W1RaiseDoor =   4,
   W1RaiseFloor =   5,
   W1FastCeilCrushRaise =   6,
   S1BuildStairsUp8 =   7,
   W1BuildStairsUp8 =   8,
   S1DoDonut =   9,
   W1PlatDownWaitUpStay =  10,
   S1ExitLevel =  11,
   W1LightTurnOn =  12,
   W1LightTurnOn255 =  13,
   S1PlatRaise32Change =  14,
   S1PlatRaise24Change =  15,
   W1CloseDoor30 =  16,
   W1StartLightStrobing =  17,
   S1FloorRaiseToNearest =  18,
   W1LowerFloor =  19,
   S1PlatRaiseNearestChange =  20,
   S1PlatDownWaitUpStay =  21,
   W1PlatRaiseNearestChange =  22,
   S1FloorLowerToLowest =  23,
   G1RaiseFloor =  24,
   W1CeilingCrushAndRaise =  25,
   DRRaiseDoorBlue =  26,
   DRRaiseDoorYellow =  27,
   DRRaiseDoorRed =  28,
   S1RaiseDoor =  29,
   W1FloorRaiseToTexture =  30,
   D1OpenDoor =  31,
   D1OpenDoorBlue =  32,
   D1OpenDoorRed =  33,
   D1OpenDoorYellow =  34,
   W1LightsVeryDark =  35,
   W1LowerFloorTurbo =  36,
   W1FloorLowerAndChange =  37,
   W1FloorLowerToLowest =  38,
   W1Teleport =  39,
   W1RaiseCeilingLowerFloor =  40,
   S1CeilingLowerToFloor =  41,
   SRCloseDoor =  42,
   SRCeilingLowerToFloor =  43,
   W1CeilingLowerAndCrush =  44,
   SRLowerFloor =  45,
   GROpenDoor =  46,
   G1PlatRaiseNearestChange =  47,
   S1CeilingCrushAndRaise =  49,
   S1CloseDoor =  50,
   S1SecretExit =  51,
   WRExitLevel =  52,
   W1PlatPerpetualRaise =  53,
   W1PlatStop =  54,
   S1FloorRaiseCrush =  55,
   W1FloorRaiseCrush =  56,
   W1CeilingCrushStop =  57,
   W1RaiseFloor24 =  58,
   W1RaiseFloor24Change =  59,
   SRFloorLowerToLowest =  60,
   SROpenDoor =  61,
   SRPlatDownWaitUpStay =  62,
   SRRaiseDoor =  63,
   SRRaiseFloor =  64,
   SRFloorRaiseCrush =  65,
   SRPlatRaise24Change =  66,
   SRPlatRaise32Change =  67,
   SRPlatRaiseNearestChange =  68,
   SRFloorRaiseToNearest =  69,
   SRLowerFloorTurbo =  70,
   S1LowerFloorTurbo =  71,
   WRCeilingLowerAndCrush =  72,
   WRCeilingCrushAndRaise =  73,
   WRCeilingCrushStop =  74,
   WRCloseDoor =  75,
   WRCloseDoor30 =  76,
   WRFastCeilCrushRaise =  77,
   SRChangeOnlyNumeric =  78,
   WRLightsVeryDark =  79,
   WRLightTurnOn =  80,
   WRLightTurnOn255 =  81,
   WRFloorLowerToLowest =  82,
   WRLowerFloor =  83,
   WRFloorLowerAndChange =  84,
   WROpenDoor =  86,
   WRPlatPerpetualRaise =  87,
   WRPlatDownWaitUpStay =  88,
   WRPlatStop =  89,
   WRRaiseDoor =  90,
   WRRaiseFloor =  91,
   WRRaiseFloor24 =  92,
   WRRaiseFloor24Change =  93,
   WRFloorRaiseCrush =  94,
   WRPlatRaiseNearestChange =  95,
   WRFloorRaiseToTexture =  96,
   WRTeleport =  97,
   WRLowerFloorTurbo =  98,
   SRDoorBlazeOpenBlue =  99,
   W1BuildStairsTurbo16 = 100,
   S1RaiseFloor = 101,
   S1LowerFloor = 102,
   S1OpenDoor = 103,
   W1TurnTagLightsOff = 104,
   WRDoorBlazeRaise = 105,
   WRDoorBlazeOpen = 106,
   WRDoorBlazeClose = 107,
   W1DoorBlazeRaise = 108,
   W1DoorBlazeOpen = 109,
   W1DoorBlazeClose = 110,
   S1DoorBlazeRaise = 111,
   S1DoorBlazeOpen = 112,
   S1DoorBlazeClose = 113,
   SRDoorBlazeRaise = 114,
   SRDoorBlazeOpen = 115,
   SRDoorBlazeClose = 116,
   DRDoorBlazeRaise = 117,
   D1DoorBlazeOpen = 118,
   W1FloorRaiseToNearest = 119,
   WRPlatBlazeDWUS = 120,
   W1PlatBlazeDWUS = 121,
   S1PlatBlazeDWUS = 122,
   SRPlatBlazeDWUS = 123,
   WRSecretExit = 124,
   W1TeleportMonsters = 125,
   WRTeleportMonsters = 126,
   S1BuildStairsTurbo16 = 127,
   WRFloorRaiseToNearest = 128,
   WRRaiseFloorTurbo = 129,
   W1RaiseFloorTurbo = 130,
   S1RaiseFloorTurbo = 131,
   SRRaiseFloorTurbo = 132,
   S1DoorBlazeOpenBlue = 133,
   SRDoorBlazeOpenRed = 134,
   S1DoorBlazeOpenRed = 135,
   SRDoorBlazeOpenYellow = 136,
   S1DoorBlazeOpenYellow = 137,
   SRLightTurnOn255 = 138,
   SRLightsVeryDark = 139,
   S1RaiseFloor512 = 140,
   W1SilentCrushAndRaise = 141,
   W1RaiseFloor512 = 142,
   W1PlatRaise24Change = 143,
   W1PlatRaise32Change = 144,
   W1CeilingLowerToFloor = 145,
   W1DoDonut = 146,
   WRRaiseFloor512 = 147,
   WRPlatRaise24Change = 148,
   WRPlatRaise32Change = 149,
   WRSilentCrushAndRaise = 150,
   WRRaiseCeilingLowerFloor = 151,
   WRCeilingLowerToFloor = 152,
   W1ChangeOnly = 153,
   WRChangeOnly = 154,
   WRDoDonut = 155,
   WRStartLightStrobing = 156,
   WRTurnTagLightsOff = 157,
   S1FloorRaiseToTexture = 158,
   S1FloorLowerAndChange = 159,
   S1RaiseFloor24Change = 160,
   S1RaiseFloor24 = 161,
   S1PlatPerpetualRaise = 162,
   S1PlatStop = 163,
   S1FastCeilCrushRaise = 164,
   S1SilentCrushAndRaise = 165,
   S1BOOMRaiseCeilingOrLowerFloor = 166,
   S1CeilingLowerAndCrush = 167,
   S1CeilingCrushStop = 168,
   S1LightTurnOn = 169,
   S1LightsVeryDark = 170,
   S1LightTurnOn255 = 171,
   S1StartLightStrobing = 172,
   S1TurnTagLightsOff = 173,
   S1Teleport = 174,
   S1CloseDoor30 = 175,
   SRFloorRaiseToTexture = 176,
   SRFloorLowerAndChange = 177,
   SRRaiseFloor512 = 178,
   SRRaiseFloor24Change = 179,
   SRRaiseFloor24 = 180,
   SRPlatPerpetualRaise = 181,
   SRPlatStop = 182,
   SRFastCeilCrushRaise = 183,
   SRCeilingCrushAndRaise = 184,
   SRSilentCrushAndRaise = 185,
   SRBOOMRaiseCeilingOrLowerFloor = 186,
   SRCeilingLowerAndCrush = 187,
   SRCeilingCrushStop = 188,
   S1ChangeOnly = 189,
   SRChangeOnly = 190,
   SRDoDonut = 191,
   SRLightTurnOn = 192,
   SRStartLightStrobing = 193,
   SRTurnTagLightsOff = 194,
   SRTeleport = 195,
   SRCloseDoor30 = 196,
   G1ExitLevel = 197,
   G1SecretExit = 198,
   W1CeilingLowerToLowest = 199,
   W1CeilingLowerToMaxFloor = 200,
   WRCeilingLowerToLowest = 201,
   WRCeilingLowerToMaxFloor = 202,
   S1CeilingLowerToLowest = 203,
   S1CeilingLowerToMaxFloor = 204,
   SRCeilingLowerToLowest = 205,
   SRCeilingLowerToMaxFloor = 206,
   W1SilentTeleport = 207,
   WRSilentTeleport = 208,
   S1SilentTeleport = 209,
   SRSilentTeleport = 210,
   SRPlatToggleUpDown = 211,
   WRPlatToggleUpDown = 212,
   W1FloorLowerToNearest = 219,
   WRFloorLowerToNearest = 220,
   S1FloorLowerToNearest = 221,
   SRFloorLowerToNearest = 222,
   W1ElevatorUp = 227,
   WRElevatorUp = 228,
   S1ElevatorUp = 229,
   SRElevatorUp = 230,
   W1ElevatorDown = 231,
   WRElevatorDown = 232,
   S1ElevatorDown = 233,
   SRElevatorDown = 234,
   W1ElevatorCurrent = 235,
   WRElevatorCurrent = 236,
   S1ElevatorCurrent = 237,
   SRElevatorCurrent = 238,
   W1ChangeOnlyNumeric = 239,
   WRChangeOnlyNumeric = 240,
   S1ChangeOnlyNumeric = 241,
   W1SilentLineTeleport = 243,
   WRSilentLineTeleport = 244,
   WRBuildStairsUp8 = 256,
   WRBuildStairsTurbo16 = 257,
   SRBuildStairsUp8 = 258,
   SRBuildStairsTurbo16 = 259,
   W1SilentLineTeleportReverse = 262,
   WRSilentLineTeleportReverse = 263,
   W1SilentLineTRMonsters = 264,
   WRSilentLineTRMonsters = 265,
   W1SilentLineTeleMonsters = 266,
   WRSilentLineTeleMonsters = 267,
   W1SilentTeleportMonsters = 268,
   WRSilentTeleportMonsters = 269,
   WRStartLineScript1S = 273,
   W1StartLineScript = 274,
   W1StartLineScript1S = 275,
   SRStartLineScript = 276,
   S1StartLineScript = 277,
   GRStartLineScript = 278,
   G1StartLineScript = 279,
   WRStartLineScript = 280,
};

enum UdmfStaticSpecial
{
   EV_STATIC_POLYOBJ_START_LINE =   1,
   EV_STATIC_POLYOBJ_EXPLICIT_LINE =   5,
   EV_STATIC_PORTAL_HORIZON_LINE_param =   9,
   EV_STATIC_3DMIDTEX_ATTACH_PARAM =  48,
   EV_STATIC_PORTAL_SECTOR_PARAM_COMPAT =  57,
   EV_STATIC_SCROLL_LEFT_PARAM = 100,
   EV_STATIC_SCROLL_RIGHT_PARAM = 101,
   EV_STATIC_SCROLL_UP_PARAM = 102,
   EV_STATIC_SCROLL_DOWN_PARAM = 103,
   EV_STATIC_SLOPE_PARAM_TAG = 118,
   EV_STATIC_LINE_SET_IDENTIFICATION = 121,
   EV_STATIC_PORTAL_LINE_PARAM_COMPAT = 156,
   EV_STATIC_SLOPE_PARAM = 181,
   EV_STATIC_INIT_PARAM = 190,
   EV_STATIC_TRANSFER_HEIGHTS_param = 209,
   EV_STATIC_LIGHT_TRANSFER_FLOOR_param = 210,
   EV_STATIC_LIGHT_TRANSFER_CEILING_param = 211,
   EV_STATIC_WIND_CONTROL_PARAM = 218,
   EV_STATIC_FRICTION_TRANSFER_param = 219,
   EV_STATIC_CURRENT_CONTROL_PARAM = 220,
   EV_STATIC_SCROLL_WALL_PARAM = 222,
   EV_STATIC_SCROLL_FLOOR_PARAM = 223,
   EV_STATIC_SCROLL_CEILING_PARAM = 224,
   EV_STATIC_SCROLL_BY_OFFSETS_param = 225,
   EV_STATIC_PUSHPULL_CONTROL_PARAM = 227,
   EV_STATIC_PORTAL_DEFINE = 300,
   EV_STATIC_PORTAL_LINE_PARAM_QUICK = 301
};

static std::unordered_map<int, UdmfSpecialTarget> gMapping;
static std::unordered_map<std::string, UdmfSpecial> gEDMapping;

//
// Initializes line mapping
//
void InitLineMapping()
{
   gMapping[D1DoorBlazeOpen] = {Door_Open, {0, 64, 0, 0, 0}, PlayerUses | NoTag, &LinedefConversion::SetLightTag};
   gMapping[D1OpenDoorBlue] = {Door_LockedRaise, {0, 16, 0, EV_LOCKDEF_BLUE, 0}, PlayerUses | NoTag, &LinedefConversion::SetLightTag};
   gMapping[D1OpenDoorRed] = {Door_LockedRaise, {0, 16, 0, EV_LOCKDEF_REDGREEN, 0}, PlayerUses | NoTag, &LinedefConversion::SetLightTag};
   gMapping[D1OpenDoorYellow] = {Door_LockedRaise, {0, 16, 0, EV_LOCKDEF_YELLOW, 0}, PlayerUses | NoTag, &LinedefConversion::SetLightTag};
   gMapping[D1OpenDoor] = {Door_Open, {0, 16, 0, 0, 0}, PlayerUses | NoTag, &LinedefConversion::SetLightTag};
   gMapping[DRDoorBlazeRaise] = {Door_Raise, {0, 64, 150, 0, 0}, PlayerUses | Repeatable | NoTag, &LinedefConversion::SetLightTag};
   gMapping[DRRaiseDoorBlue] = {Door_LockedRaise, {0, 16, 150, EV_LOCKDEF_BLUE, 0}, PlayerUses | Repeatable | NoTag, &LinedefConversion::SetLightTag};
   gMapping[DRRaiseDoorRed] = {Door_LockedRaise, {0, 16, 150, EV_LOCKDEF_REDGREEN, 0}, PlayerUses | Repeatable | NoTag, &LinedefConversion::SetLightTag};
   gMapping[DRRaiseDoorYellow] = {Door_LockedRaise, {0, 16, 150, EV_LOCKDEF_YELLOW, 0}, PlayerUses | Repeatable | NoTag, &LinedefConversion::SetLightTag};
   gMapping[DRRaiseDoor] = {Door_Raise, {0, 16, 150, 0, 0}, PlayerUses | MonsterUses | Repeatable | NoTag, &LinedefConversion::SetLightTag};
   gMapping[G1ExitLevel] = {Exit_Normal, {0, 0, 0, 0, 0}, PlayerShoots | NoTag};
   gMapping[G1PlatRaiseNearestChange] = {Plat_RaiseAndStayTx0, {0, 4, 0, 0, 0}, PlayerShoots};
   gMapping[G1RaiseFloor] = {Floor_RaiseToLowestCeiling, {0, 8, 0, 0, 0}, PlayerShoots};
   gMapping[G1SecretExit] = {Exit_Secret, {0, 0, 0, 0, 0}, PlayerShoots | NoTag};
   gMapping[G1StartLineScript] = {ACS_Execute, {0, 0, 0, 0, 0}, PlayerShoots};
   gMapping[GROpenDoor] = {Door_Open, {0, 16, 0, 0, 0}, PlayerShoots | MonsterShoots | Repeatable};
   gMapping[GRStartLineScript] = {ACS_Execute, {0, 0, 0, 0, 0}, PlayerShoots | Repeatable};
   gMapping[S1BOOMRaiseCeilingOrLowerFloor] = {FloorAndCeiling_LowerRaise, {0, 8, 8, 1998, 0}, PlayerUses};
   gMapping[S1BuildStairsTurbo16] = {Stairs_BuildUpDoom, {0, 32, 16, 0, 0}, PlayerUses};
   gMapping[S1BuildStairsUp8] = {Stairs_BuildUpDoom, {0, 2, 8, 0, 0}, PlayerUses};
   gMapping[S1CeilingCrushAndRaise] = {Ceiling_CrushAndRaiseDist, {0, 8, 8, 10, 0}, PlayerUses};
   gMapping[S1CeilingCrushStop] = {Ceiling_CrushStop, {0, 0, 0, 0, 0}, PlayerUses};
   gMapping[S1CeilingLowerAndCrush] = {Ceiling_LowerToFloor, {0, 8, 0, 0, 8}, PlayerUses};
   gMapping[S1CeilingLowerToFloor] = {Ceiling_LowerToFloor, {0, 8, 0, 0, 0}, PlayerUses};
   gMapping[S1CeilingLowerToLowest] = {Ceiling_LowerToLowest, {0, 8, 0, 0, 0}, PlayerUses};
   gMapping[S1CeilingLowerToMaxFloor] = {Ceiling_LowerToHighestFloor, {0, 8, 0, 0, 0}, PlayerUses};
   gMapping[S1ChangeOnlyNumeric] = {Floor_TransferNumeric, {0, 0, 0, 0, 0}, PlayerUses};
   gMapping[S1ChangeOnly] = {Floor_TransferTrigger, {0, 0, 0, 0, 0}, PlayerUses};
   gMapping[S1CloseDoor30] = {Door_CloseWaitOpen, {0, 16, 240, 0, 0}, PlayerUses};
   gMapping[S1CloseDoor] = {Door_Close, {0, 16, 0, 0, 0}, PlayerUses};
   gMapping[S1DoDonut] = {Floor_Donut, {0, 4, 4, 0, 0}, PlayerUses};
   gMapping[S1DoorBlazeClose] = {Door_Close, {0, 64, 0, 0, 0}, PlayerUses};
   gMapping[S1DoorBlazeOpenBlue] = {Door_LockedRaise, {0, 64, 0, EV_LOCKDEF_BLUE, 0}, PlayerUses};
   gMapping[S1DoorBlazeOpenRed] = {Door_LockedRaise, {0, 64, 0, EV_LOCKDEF_REDGREEN, 0}, PlayerUses};
   gMapping[S1DoorBlazeOpenYellow] = {Door_LockedRaise, {0, 64, 0, EV_LOCKDEF_YELLOW, 0}, PlayerUses};
   gMapping[S1DoorBlazeOpen] = {Door_Open, {0, 64, 0, 0, 0}, PlayerUses};
   gMapping[S1DoorBlazeRaise] = {Door_Raise, {0, 64, 150, 0, 0}, PlayerUses};
   gMapping[S1ElevatorCurrent] = {Elevator_MoveToFloor, {0, 32, 0, 0, 0}, PlayerUses};
   gMapping[S1ElevatorDown] = {Elevator_LowerToNearest, {0, 32, 0, 0, 0}, PlayerUses};
   gMapping[S1ElevatorUp] = {Elevator_RaiseToNearest, {0, 32, 0, 0, 0}, PlayerUses};
   gMapping[S1ExitLevel] = {Exit_Normal, {0, 0, 0, 0, 0}, PlayerUses | NoTag};
   gMapping[S1FastCeilCrushRaise] = {Ceiling_CrushAndRaiseDist, {0, 8, 16, 10, 0}, PlayerUses};
   gMapping[S1FloorLowerAndChange] = {Floor_LowerToLowest, {0, 8, 6, 0, 0}, PlayerUses};
   gMapping[S1FloorLowerToLowest] = {Floor_LowerToLowest, {0, 8, 0, 0, 0}, PlayerUses};
   gMapping[S1FloorLowerToNearest] = {Floor_LowerToNearest, {0, 8, 0, 0, 0}, PlayerUses};
   gMapping[S1FloorRaiseCrush] = {Floor_RaiseToLowestCeiling, {0, 8, 0, 10, 8}, PlayerUses};
   gMapping[S1FloorRaiseToNearest] = {Floor_RaiseToNearest, {0, 8, 0, 0, 0}, PlayerUses};
   gMapping[S1FloorRaiseToTexture] = {Floor_RaiseByTexture, {0, 8, 0, 0, 0}, PlayerUses};
   gMapping[S1LightTurnOn255] = {Light_ChangeToValue, {0, 255, 0, 0, 0}, PlayerUses};
   gMapping[S1LightTurnOn] = {Light_MaxNeighbor, {0, 0, 0, 0, 0}, PlayerUses};
   gMapping[S1LightsVeryDark] = {Light_ChangeToValue, {0, 35, 0, 0, 0}, PlayerUses};
   gMapping[S1LowerFloorTurbo] = {Floor_LowerToHighest, {0, 32, 136, 0, 0}, PlayerUses};
   gMapping[S1LowerFloor] = {Floor_LowerToHighestEE, {0, 8, 0, 0, 0}, PlayerUses};
   gMapping[S1OpenDoor] = {Door_Open, {0, 16, 0, 0, 0}, PlayerUses};
   gMapping[S1PlatBlazeDWUS] = {Plat_DownWaitUpStayLip, {0, 64, 105, 0, 0}, PlayerUses};
   gMapping[S1PlatDownWaitUpStay] = {Plat_DownWaitUpStayLip, {0, 32, 105, 0, 0}, PlayerUses};
   gMapping[S1PlatPerpetualRaise] = {Plat_PerpetualRaiseLip, {0, 8, 105, 0, 0}, PlayerUses};
   gMapping[S1PlatRaise24Change] = {Plat_UpByValueStayTx, {0, 4, 3, 0, 0}, PlayerUses};
   gMapping[S1PlatRaise32Change] = {Plat_UpByValueStayTx, {0, 4, 4, 0, 0}, PlayerUses};
   gMapping[S1PlatRaiseNearestChange] = {Plat_RaiseAndStayTx0, {0, 4, 0, 0, 0}, PlayerUses};
   gMapping[S1PlatStop] = {Plat_Stop, {0, 0, 0, 0, 0}, PlayerUses};
   gMapping[S1RaiseDoor] = {Door_Raise, {0, 16, 150, 0, 0}, PlayerUses};
   gMapping[S1RaiseFloor24Change] = {Floor_RaiseByValue, {0, 8, 24, 5, 0}, PlayerUses};
   gMapping[S1RaiseFloor24] = {Floor_RaiseByValue, {0, 8, 24, 0, 0}, PlayerUses};
   gMapping[S1RaiseFloor512] = {Floor_RaiseByValue, {0, 8, 512, 0, 0}, PlayerUses};
   gMapping[S1RaiseFloorTurbo] = {Floor_RaiseToNearest, {0, 32, 0, 0, 0}, PlayerUses};
   gMapping[S1RaiseFloor] = {Floor_RaiseToLowestCeiling, {0, 8, 0, 0, 0}, PlayerUses};
   gMapping[S1SecretExit] = {Exit_Secret, {0, 0, 0, 0, 0}, PlayerUses | NoTag};
   gMapping[S1SilentCrushAndRaise] = {Ceiling_CrushAndRaiseSilentDist, {0, 8, 8, 10, 0}, PlayerUses};
   gMapping[S1SilentTeleport] = {Teleport_NoFog, {0, 2, 0, 1, 0}, PlayerUses | MonsterUses | TagThird};
   gMapping[S1StartLightStrobing] = {Light_StrobeDoom, {0, 5, 35, 0, 0}, PlayerUses};
   gMapping[S1StartLineScript] = {ACS_Execute, {0, 0, 0, 0, 0}, PlayerUses};
   gMapping[S1Teleport] = {Teleport, {0, 0, 0, 0, 0}, PlayerUses | MonsterUses | TagSecond};
   gMapping[S1TurnTagLightsOff] = {Light_MinNeighbor, {0, 0, 0, 0, 0}, PlayerCrosses};
   gMapping[SRBOOMRaiseCeilingOrLowerFloor] = {FloorAndCeiling_LowerRaise, {0, 8, 8, 1998, 0}, PlayerUses | Repeatable};
   gMapping[SRBuildStairsTurbo16] = {Stairs_BuildUpDoom, {0, 32, 16, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRBuildStairsUp8] = {Stairs_BuildUpDoom, {0, 2, 8, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRCeilingCrushAndRaise] = {Ceiling_CrushAndRaiseDist, {0, 8, 8, 10, 0}, PlayerUses | Repeatable};
   gMapping[SRCeilingCrushStop] = {Ceiling_CrushStop, {0, 0, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRCeilingLowerAndCrush] = {Ceiling_LowerToFloor, {0, 8, 0, 0, 8}, PlayerUses | Repeatable};
   gMapping[SRCeilingLowerToFloor] = {Ceiling_LowerToFloor, {0, 8, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRCeilingLowerToLowest] = {Ceiling_LowerToLowest, {0, 8, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRCeilingLowerToMaxFloor] = {Ceiling_LowerToHighestFloor, {0, 8, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRChangeOnlyNumeric] = {Floor_TransferNumeric, {0, 0, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRChangeOnly] = {Floor_TransferTrigger, {0, 0, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRCloseDoor30] = {Door_CloseWaitOpen, {0, 16, 240, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRCloseDoor] = {Door_Close, {0, 16, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRDoDonut] = {Floor_Donut, {0, 4, 4, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRDoorBlazeClose] = {Door_Close, {0, 64, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRDoorBlazeOpenBlue] = {Door_LockedRaise, {0, 64, 0, EV_LOCKDEF_BLUE, 0}, PlayerUses | Repeatable};
   gMapping[SRDoorBlazeOpenRed] = {Door_LockedRaise, {0, 64, 0, EV_LOCKDEF_REDGREEN, 0}, PlayerUses | Repeatable};
   gMapping[SRDoorBlazeOpenYellow] = {Door_LockedRaise, {0, 64, 0, EV_LOCKDEF_YELLOW, 0}, PlayerUses | Repeatable};
   gMapping[SRDoorBlazeOpen] = {Door_Open, {0, 64, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRDoorBlazeRaise] = {Door_Raise, {0, 64, 150, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRElevatorCurrent] = {Elevator_MoveToFloor, {0, 32, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRElevatorDown] = {Elevator_LowerToNearest, {0, 32, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRElevatorUp] = {Elevator_RaiseToNearest, {0, 32, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRFastCeilCrushRaise] = {Ceiling_CrushAndRaiseDist, {0, 8, 16, 10, 0}, PlayerUses | Repeatable};
   gMapping[SRFloorLowerAndChange] = {Floor_LowerToLowest, {0, 8, 6, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRFloorLowerToLowest] = {Floor_LowerToLowest, {0, 8, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRFloorLowerToNearest] = {Floor_LowerToNearest, {0, 8, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRFloorRaiseCrush] = {Floor_RaiseToLowestCeiling, {0, 8, 0, 10, 8}, PlayerUses | Repeatable};
   gMapping[SRFloorRaiseToNearest] = {Floor_RaiseToNearest, {0, 8, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRFloorRaiseToTexture] = {Floor_RaiseByTexture, {0, 8, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRLightTurnOn255] = {Light_ChangeToValue, {0, 255, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRLightTurnOn] = {Light_MaxNeighbor, {0, 0, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRLightsVeryDark] = {Light_ChangeToValue, {0, 35, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRLowerFloorTurbo] = {Floor_LowerToHighest, {0, 32, 136, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRLowerFloor] = {Floor_LowerToHighestEE, {0, 8, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SROpenDoor] = {Door_Open, {0, 16, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRPlatBlazeDWUS] = {Plat_DownWaitUpStayLip, {0, 64, 105, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRPlatDownWaitUpStay] = {Plat_DownWaitUpStayLip, {0, 32, 105, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRPlatPerpetualRaise] = {Plat_PerpetualRaiseLip, {0, 8, 105, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRPlatRaise24Change] = {Floor_RaiseByValue, {0, 8, 24, 5, 0}, PlayerUses | Repeatable};
   gMapping[SRPlatRaise32Change] = {Floor_RaiseByValue, {0, 8, 32, 5, 0}, PlayerUses | Repeatable};
   gMapping[SRPlatRaiseNearestChange] = {Plat_RaiseAndStayTx0, {0, 4, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRPlatStop] = {Plat_Stop, {0, 0, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRPlatToggleUpDown] = {Plat_ToggleCeiling, {0, 0, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRRaiseDoor] = {Door_Raise, {0, 16, 150, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRRaiseFloor24Change] = {Floor_RaiseByValue, {0, 8, 24, 5, 0}, PlayerUses | Repeatable};
   gMapping[SRRaiseFloor24] = {Floor_RaiseByValue, {0, 8, 24, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRRaiseFloor512] = {Floor_RaiseByValue, {0, 8, 512, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRRaiseFloorTurbo] = {Floor_RaiseToNearest, {0, 32, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRRaiseFloor] = {Floor_RaiseToLowestCeiling, {0, 8, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRSilentCrushAndRaise] = {Ceiling_CrushAndRaiseSilentDist, {0, 8, 8, 10, 0}, PlayerUses | Repeatable};
   gMapping[SRSilentTeleport] = {Teleport_NoFog, {0, 2, 0, 1, 0}, PlayerUses | MonsterUses | Repeatable | TagThird};
   gMapping[SRStartLightStrobing] = {Light_StrobeDoom, {0, 5, 35, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRStartLineScript] = {ACS_Execute, {0, 0, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[SRTeleport] = {Teleport, {0, 0, 0, 0, 0}, PlayerUses | MonsterUses | Repeatable | TagSecond};
   gMapping[SRTurnTagLightsOff] = {Light_MinNeighbor, {0, 0, 0, 0, 0}, PlayerUses | Repeatable};
   gMapping[W1BuildStairsTurbo16] = {Stairs_BuildUpDoom, {0, 32, 16, 0, 0}, PlayerCrosses};
   gMapping[W1BuildStairsUp8] = {Stairs_BuildUpDoom, {0, 2, 8, 0, 0}, PlayerCrosses};
   gMapping[W1CeilingCrushAndRaise] = {Ceiling_CrushAndRaiseDist, {0, 8, 8, 10, 0}, PlayerCrosses};
   gMapping[W1CeilingCrushStop] = {Ceiling_CrushStop, {0, 0, 0, 0, 0}, PlayerCrosses};
   gMapping[W1CeilingLowerAndCrush] = {Ceiling_LowerToFloor, {0, 8, 0, 0, 8}, PlayerCrosses};
   gMapping[W1CeilingLowerToFloor] = {Ceiling_LowerToFloor, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1CeilingLowerToLowest] = {Ceiling_LowerToLowest, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1CeilingLowerToMaxFloor] = {Ceiling_LowerToHighestFloor, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1ChangeOnlyNumeric] = {Floor_TransferNumeric, {0, 0, 0, 0, 0}, PlayerCrosses};
   gMapping[W1ChangeOnly] = {Floor_TransferTrigger, {0, 0, 0, 0, 0}, PlayerCrosses};
   gMapping[W1CloseDoor30] = {Door_CloseWaitOpen, {0, 16, 240, 0, 0}, PlayerCrosses};
   gMapping[W1CloseDoor] = {Door_Close, {0, 16, 0, 0, 0}, PlayerCrosses};
   gMapping[W1DoDonut] = {Floor_Donut, {0, 4, 4, 0, 0}, PlayerCrosses};
   gMapping[W1DoorBlazeClose] = {Door_Close, {0, 64, 0, 0, 0}, PlayerCrosses};
   gMapping[W1DoorBlazeOpen] = {Door_Open, {0, 64, 0, 0, 0}, PlayerCrosses};
   gMapping[W1DoorBlazeRaise] = {Door_Raise, {0, 64, 150, 0, 0}, PlayerCrosses};
   gMapping[W1ElevatorCurrent] = {Elevator_MoveToFloor, {0, 32, 0, 0, 0}, PlayerCrosses};
   gMapping[W1ElevatorDown] = {Elevator_LowerToNearest, {0, 32, 0, 0, 0}, PlayerCrosses};
   gMapping[W1ElevatorUp] = {Elevator_RaiseToNearest, {0, 32, 0, 0, 0}, PlayerCrosses};
   gMapping[W1FastCeilCrushRaise] = {Ceiling_CrushAndRaiseDist, {0, 8, 16, 10, 0}, PlayerCrosses};
   gMapping[W1FloorLowerAndChange] = {Floor_LowerToLowest, {0, 8, 6, 0, 0}, PlayerCrosses};
   gMapping[W1FloorLowerToLowest] = {Floor_LowerToLowest, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1FloorLowerToNearest] = {Floor_LowerToNearest, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1FloorRaiseCrush] = {Floor_RaiseToLowestCeiling, {0, 8, 0, 10, 8}, PlayerCrosses};
   gMapping[W1FloorRaiseToNearest] = {Floor_RaiseToNearest, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1FloorRaiseToTexture] = {Floor_RaiseByTexture, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1LightTurnOn255] = {Light_ChangeToValue, {0, 255, 0, 0, 0}, PlayerCrosses};
   gMapping[W1LightTurnOn] = {Light_MaxNeighbor, {0, 0, 0, 0, 0}, PlayerCrosses};
   gMapping[W1LightsVeryDark] = {Light_ChangeToValue, {0, 35, 0, 0, 0}, PlayerCrosses};
   gMapping[W1LowerFloorTurbo] = {Floor_LowerToHighest, {0, 32, 136, 0, 0}, PlayerCrosses};
   gMapping[W1LowerFloor] = {Floor_LowerToHighestEE, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1OpenDoor] = {Door_Open, {0, 16, 0, 0, 0}, PlayerCrosses};
   gMapping[W1PlatBlazeDWUS] = {Plat_DownWaitUpStayLip, {0, 64, 105, 0, 0}, PlayerCrosses};
   gMapping[W1PlatDownWaitUpStay] = {Plat_DownWaitUpStayLip, {0, 32, 105, 0, 0}, PlayerCrosses | MonsterCrosses};
   gMapping[W1PlatPerpetualRaise] = {Plat_PerpetualRaiseLip, {0, 8, 105, 0, 0}, PlayerCrosses};
   gMapping[W1PlatRaise24Change] = {Plat_UpByValueStayTx, {0, 4, 3, 0, 0}, PlayerCrosses};
   gMapping[W1PlatRaise32Change] = {Plat_UpByValueStayTx, {0, 4, 4, 0, 0}, PlayerCrosses};
   gMapping[W1PlatRaiseNearestChange] = {Plat_RaiseAndStayTx0, {0, 4, 0, 0, 0}, PlayerCrosses};
   gMapping[W1PlatStop] = {Plat_Stop, {0, 0, 0, 0, 0}, PlayerCrosses};
   gMapping[W1RaiseCeilingLowerFloor] = {Ceiling_RaiseToHighest, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1RaiseDoor] = {Door_Raise, {0, 16, 150, 0, 0}, PlayerCrosses | MonsterCrosses};
   gMapping[W1RaiseFloor24Change] = {Floor_RaiseByValue, {0, 8, 24, 5, 0}, PlayerCrosses};
   gMapping[W1RaiseFloor24] = {Floor_RaiseByValue, {0, 8, 24, 0, 0}, PlayerCrosses};
   gMapping[W1RaiseFloor512] = {Floor_RaiseByValue, {0, 8, 512, 0, 0}, PlayerCrosses};
   gMapping[W1RaiseFloorTurbo] = {Floor_RaiseToNearest, {0, 32, 0, 0, 0}, PlayerCrosses};
   gMapping[W1RaiseFloor] = {Floor_RaiseToLowestCeiling, {0, 8, 0, 0, 0}, PlayerCrosses};
   gMapping[W1SilentCrushAndRaise] = {Ceiling_CrushAndRaiseSilentDist, {0, 8, 8, 10, 0}, PlayerCrosses};
   gMapping[W1SilentLineTRMonsters] = {Teleport_Line, {0, 0, 1, 0, 0}, MonsterCrosses | TagSecond};
   gMapping[W1SilentLineTeleMonsters] = {Teleport_Line, {0, 0, 0, 0, 0}, MonsterCrosses | TagSecond};
   gMapping[W1SilentLineTeleportReverse] = {Teleport_Line, {0, 0, 1, 0, 0}, PlayerCrosses | MonsterCrosses | TagSecond};
   gMapping[W1SilentLineTeleport] = {Teleport_Line, {0, 0, 0, 0, 0}, PlayerCrosses | MonsterCrosses | TagSecond};
   gMapping[W1SilentTeleportMonsters] = {Teleport_NoFog, {0, 2, 0, 1, 0}, MonsterCrosses | TagThird};
   gMapping[W1SilentTeleport] = {Teleport_NoFog, {0, 2, 0, 1, 0}, PlayerCrosses | MonsterCrosses | TagThird};
   gMapping[W1StartLightStrobing] = {Light_StrobeDoom, {0, 5, 35, 0, 0}, PlayerCrosses};
   gMapping[W1StartLineScript1S] = {ACS_Execute, {0, 0, 0, 0, 0}, PlayerCrosses | FirstSide};
   gMapping[W1StartLineScript] = {ACS_Execute, {0, 0, 0, 0, 0}, PlayerCrosses};
   gMapping[W1TeleportMonsters] = {Teleport, {0, 0, 0, 0, 0}, MonsterCrosses | TagSecond};
   gMapping[W1Teleport] = {Teleport, {0, 0, 0, 0, 0}, PlayerCrosses | MonsterCrosses | TagSecond};
   gMapping[W1TurnTagLightsOff] = {Light_MinNeighbor, {0, 0, 0, 0, 0}, PlayerCrosses};
   gMapping[WRBuildStairsTurbo16] = {Stairs_BuildUpDoom, {0, 32, 16, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRBuildStairsUp8] = {Stairs_BuildUpDoom, {0, 2, 8, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRCeilingCrushAndRaise] = {Ceiling_CrushAndRaiseDist, {0, 8, 8, 10, 0}, PlayerCrosses | Repeatable};
   gMapping[WRCeilingCrushStop] = {Ceiling_CrushStop, {0, 0, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRCeilingLowerAndCrush] = {Ceiling_LowerToFloor, {0, 8, 0, 0, 8}, PlayerCrosses | Repeatable};
   gMapping[WRCeilingLowerToFloor] = {Ceiling_LowerToFloor, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRCeilingLowerToLowest] = {Ceiling_LowerToLowest, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRCeilingLowerToMaxFloor] = {Ceiling_LowerToHighestFloor, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRChangeOnlyNumeric] = {Floor_TransferNumeric, {0, 0, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRChangeOnly] = {Floor_TransferTrigger, {0, 0, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRCloseDoor30] = {Door_CloseWaitOpen, {0, 16, 240, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRCloseDoor] = {Door_Close, {0, 16, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRDoDonut] = {Floor_Donut, {0, 4, 4, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRDoorBlazeClose] = {Door_Close, {0, 64, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRDoorBlazeOpen] = {Door_Open, {0, 64, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRDoorBlazeRaise] = {Door_Raise, {0, 64, 150, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRElevatorCurrent] = {Elevator_MoveToFloor, {0, 32, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRElevatorDown] = {Elevator_LowerToNearest, {0, 32, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRElevatorUp] = {Elevator_RaiseToNearest, {0, 32, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRExitLevel] = {Exit_Normal, {0, 0, 0, 0, 0}, PlayerCrosses | NoTag};
   gMapping[WRFastCeilCrushRaise] = {Ceiling_CrushAndRaiseDist, {0, 8, 16, 10, 0}, PlayerCrosses | Repeatable};
   gMapping[WRFloorLowerAndChange] = {Floor_LowerToLowest, {0, 8, 6, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRFloorLowerToLowest] = {Floor_LowerToLowest, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRFloorLowerToNearest] = {Floor_LowerToNearest, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRFloorRaiseCrush] = {Floor_RaiseToLowestCeiling, {0, 8, 0, 10, 8}, PlayerCrosses | Repeatable};
   gMapping[WRFloorRaiseToNearest] = {Floor_RaiseToNearest, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRFloorRaiseToTexture] = {Floor_RaiseByTexture, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRLightTurnOn255] = {Light_ChangeToValue, {0, 255, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRLightTurnOn] = {Light_MaxNeighbor, {0, 0, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRLightsVeryDark] = {Light_ChangeToValue, {0, 35, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRLowerFloorTurbo] = {Floor_LowerToHighest, {0, 32, 136, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRLowerFloor] = {Floor_LowerToHighestEE, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WROpenDoor] = {Door_Open, {0, 16, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRPlatBlazeDWUS] = {Plat_DownWaitUpStayLip, {0, 64, 105, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRPlatDownWaitUpStay] = {Plat_DownWaitUpStayLip, {0, 32, 105, 0, 0}, PlayerCrosses | MonsterCrosses | Repeatable};
   gMapping[WRPlatPerpetualRaise] = {Plat_PerpetualRaiseLip, {0, 8, 105, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRPlatRaise24Change] = {Plat_UpByValueStayTx, {0, 4, 3, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRPlatRaise32Change] = {Plat_UpByValueStayTx, {0, 4, 3, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRPlatRaiseNearestChange] = {Plat_RaiseAndStayTx0, {0, 4, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRPlatStop] = {Plat_Stop, {0, 0, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRPlatToggleUpDown] = {Plat_ToggleCeiling, {0, 0, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRRaiseCeilingLowerFloor] = {Ceiling_RaiseToHighest, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRRaiseDoor] = {Door_Raise, {0, 16, 150, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRRaiseFloor24Change] = {Floor_RaiseByValue, {0, 8, 24, 5, 0}, PlayerCrosses | Repeatable};
   gMapping[WRRaiseFloor24] = {Floor_RaiseByValue, {0, 8, 24, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRRaiseFloor512] = {Floor_RaiseByValue, {0, 8, 512, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRRaiseFloorTurbo] = {Floor_RaiseToNearest, {0, 32, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRRaiseFloor] = {Floor_RaiseToLowestCeiling, {0, 8, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRSecretExit] = {Exit_Secret, {0, 0, 0, 0, 0}, PlayerCrosses | NoTag};
   gMapping[WRSilentCrushAndRaise] = {Ceiling_CrushAndRaiseSilentDist, {0, 8, 8, 10, 0}, PlayerCrosses | Repeatable};
   gMapping[WRSilentLineTRMonsters] = {Teleport_Line, {0, 0, 1, 0, 0}, MonsterCrosses | Repeatable | TagSecond};
   gMapping[WRSilentLineTeleMonsters] = {Teleport_Line, {0, 0, 0, 0, 0}, MonsterCrosses | Repeatable | TagSecond};
   gMapping[WRSilentLineTeleportReverse] = {Teleport_Line, {0, 0, 1, 0, 0}, PlayerCrosses | MonsterCrosses | Repeatable | TagSecond};
   gMapping[WRSilentLineTeleport] = {Teleport_Line, {0, 0, 0, 0, 0}, PlayerCrosses | MonsterCrosses | Repeatable | TagSecond};
   gMapping[WRSilentTeleportMonsters] = {Teleport_NoFog, {0, 2, 0, 1, 0}, MonsterCrosses | Repeatable | TagThird};
   gMapping[WRSilentTeleport] = {Teleport_NoFog, {0, 2, 0, 1, 0}, PlayerCrosses | MonsterCrosses | Repeatable | TagThird};
   gMapping[WRStartLightStrobing] = {Light_StrobeDoom, {0, 5, 35, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRStartLineScript1S] = {ACS_Execute, {0, 0, 0, 0, 0}, PlayerCrosses | Repeatable | FirstSide};
   gMapping[WRStartLineScript] = {ACS_Execute, {0, 0, 0, 0, 0}, PlayerCrosses | Repeatable};
   gMapping[WRTeleportMonsters] = {Teleport, {0, 0, 0, 0, 0}, MonsterCrosses | Repeatable | TagSecond};
   gMapping[WRTeleport] = {Teleport, {0, 0, 0, 0, 0}, PlayerCrosses | MonsterCrosses | Repeatable | TagSecond};
   gMapping[WRTurnTagLightsOff] = {Light_MinNeighbor, {0, 0, 0, 0, 0}, PlayerCrosses | Repeatable};

   gMapping[EV_STATIC_3DMIDTEX_ATTACH_CEILING] = {EV_STATIC_3DMIDTEX_ATTACH_PARAM, {0, 0, 1, 0, 0}};
   gMapping[EV_STATIC_3DMIDTEX_ATTACH_FLOOR] = {EV_STATIC_3DMIDTEX_ATTACH_PARAM, {0, 0, 0, 0, 0}};
   gMapping[EV_STATIC_ATTACH_CEILING_TO_CONTROL] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::AttachToControl};
   gMapping[EV_STATIC_ATTACH_FLOOR_TO_CONTROL] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::AttachToControl};
   gMapping[EV_STATIC_ATTACH_MIRROR_CEILING] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::AttachToControl};
   gMapping[EV_STATIC_ATTACH_MIRROR_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::AttachToControl};
   gMapping[EV_STATIC_ATTACH_SET_CEILING_CONTROL] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::SetSurfaceControl};
   gMapping[EV_STATIC_ATTACH_SET_FLOOR_CONTROL] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::SetSurfaceControl};
   gMapping[EV_STATIC_CARRY_ACCEL_FLOOR] = {EV_STATIC_SCROLL_FLOOR_PARAM, {0, 5, 1, 0, 0}};
   gMapping[EV_STATIC_CARRY_DISPLACE_FLOOR] = {EV_STATIC_SCROLL_FLOOR_PARAM, {0, 6, 1, 0, 0}};
   gMapping[EV_STATIC_CARRY_FLOOR] = {EV_STATIC_SCROLL_FLOOR_PARAM, {0, 4, 1, 0, 0}};
   gMapping[EV_STATIC_CURRENT_CONTROL] = {EV_STATIC_CURRENT_CONTROL_PARAM, {0, 0, 0, 1, 0}};
   gMapping[EV_STATIC_EXTRADATA_LINEDEF] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::ResolveLineExtraData};
   gMapping[EV_STATIC_EXTRADATA_SECTOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::ResolveSectorExtraData};
   gMapping[EV_STATIC_FRICTION_TRANSFER] = {EV_STATIC_FRICTION_TRANSFER_param};
   gMapping[EV_STATIC_HERETIC_CURRENT] = {EV_STATIC_CURRENT_CONTROL_PARAM, {0, 0, 0, 3, 0}};
   gMapping[EV_STATIC_HERETIC_WIND] = {EV_STATIC_WIND_CONTROL_PARAM, {0, 0, 0, 3, 0}};
   gMapping[EV_STATIC_LIGHT_TRANSFER_CEILING] = {EV_STATIC_LIGHT_TRANSFER_CEILING_param};
   gMapping[EV_STATIC_LIGHT_TRANSFER_FLOOR] = {EV_STATIC_LIGHT_TRANSFER_FLOOR_param};
   gMapping[EV_STATIC_LINE_SET_IDENTIFICATION] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::SetLineID};
   gMapping[EV_STATIC_PORTAL_ANCHORED_CEILING] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_ANCHORED_CEILING_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_ANCHORED_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_ANCHOR] = {};
   gMapping[EV_STATIC_PORTAL_ANCHOR_FLOOR] = {};
   gMapping[EV_STATIC_PORTAL_APPLY_FRONTSECTOR] = {};
   gMapping[EV_STATIC_PORTAL_HORIZON_CEILING] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_HORIZON_CEILING_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_HORIZON_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_HORIZON_LINE] = {EV_STATIC_PORTAL_HORIZON_LINE_param};
   gMapping[EV_STATIC_PORTAL_LINE] = {};
   gMapping[EV_STATIC_PORTAL_LINKED_ANCHOR] = {};
   gMapping[EV_STATIC_PORTAL_LINKED_ANCHOR_FLOOR] = {};
   gMapping[EV_STATIC_PORTAL_LINKED_CEILING] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_LINKED_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_LINKED_L2L_ANCHOR] = {};
   gMapping[EV_STATIC_PORTAL_LINKED_LINE2LINE] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::QuickLinePortal};
   gMapping[EV_STATIC_PORTAL_PLANE_CEILING] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_PLANE_CEILING_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_PLANE_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_SKYBOX_CEILING] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_SKYBOX_CEILING_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_SKYBOX_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_TWOWAY_CEILING] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PORTAL_TWOWAY_FLOOR] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::PortalDefine};
   gMapping[EV_STATIC_PUSHPULL_CONTROL] = {EV_STATIC_PUSHPULL_CONTROL_PARAM, {0, 0, 0, 1, 0}};   // TODO
   gMapping[EV_STATIC_SCROLL_ACCEL_CEILING] = {EV_STATIC_SCROLL_CEILING_PARAM, {0, 5, 0, 0, 0}};
   gMapping[EV_STATIC_SCROLL_ACCEL_FLOOR] = {EV_STATIC_SCROLL_FLOOR_PARAM, {0, 5, 0, 0, 0}};
   gMapping[EV_STATIC_SCROLL_ACCEL_WALL] = {EV_STATIC_SCROLL_WALL_PARAM, {0, 1, 0, 0, 0}};
   gMapping[EV_STATIC_SCROLL_BY_OFFSETS] = {EV_STATIC_SCROLL_BY_OFFSETS_param};
   gMapping[EV_STATIC_SCROLL_CARRY_ACCEL_FLOOR] = {EV_STATIC_SCROLL_FLOOR_PARAM, {0, 5, 2, 0, 0}};
   gMapping[EV_STATIC_SCROLL_CARRY_DISPLACE_FLOOR] = {EV_STATIC_SCROLL_FLOOR_PARAM, {0, 6, 2, 0, 0}};
   gMapping[EV_STATIC_SCROLL_CARRY_FLOOR] = {EV_STATIC_SCROLL_FLOOR_PARAM, {0, 4, 2, 0, 0}};
   gMapping[EV_STATIC_SCROLL_CEILING] = {EV_STATIC_SCROLL_CEILING_PARAM, {0, 4, 0, 0, 0}};
   gMapping[EV_STATIC_SCROLL_DISPLACE_CEILING] = {EV_STATIC_SCROLL_CEILING_PARAM, {0, 6, 0, 0, 0}};
   gMapping[EV_STATIC_SCROLL_DISPLACE_FLOOR] = {EV_STATIC_SCROLL_FLOOR_PARAM, {0, 6, 0, 0, 0}};
   gMapping[EV_STATIC_SCROLL_DISPLACE_WALL] = {EV_STATIC_SCROLL_WALL_PARAM, {0, 2, 0, 0, 0}};
   gMapping[EV_STATIC_SCROLL_FLOOR] = {EV_STATIC_SCROLL_FLOOR_PARAM, {0, 4, 0, 0, 0}};
   gMapping[EV_STATIC_SCROLL_LINE_DOWN] = {EV_STATIC_SCROLL_DOWN_PARAM, {64, 0, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SCROLL_LINE_DOWN_FAST] = {EV_STATIC_SCROLL_DOWN_PARAM, {192, 0, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SCROLL_LINE_LEFT] = {EV_STATIC_SCROLL_LEFT_PARAM, {64, 0, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SCROLL_LINE_RIGHT] = {EV_STATIC_SCROLL_RIGHT_PARAM, {64, 0, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SCROLL_LINE_UP] = {EV_STATIC_SCROLL_UP_PARAM, {64, 0, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SCROLL_WALL_WITH] = {EV_STATIC_SCROLL_WALL_PARAM, {0, 0, 0, 0, 0}};
   gMapping[EV_STATIC_SKY_TRANSFER] = {EV_STATIC_INIT_PARAM, {0, 255, 0, 0, 0}};
   gMapping[EV_STATIC_SKY_TRANSFER_FLIPPED] = {EV_STATIC_INIT_PARAM, {0, 255, 1, 0, 0}};
   gMapping[EV_STATIC_SLOPE_BACKFLOOR_FRONTCEILING] = {EV_STATIC_SLOPE_PARAM, {2, 1, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SLOPE_BSEC_CEILING] = {EV_STATIC_SLOPE_PARAM, {0, 2, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SLOPE_BSEC_FLOOR] = {EV_STATIC_SLOPE_PARAM, {2, 0, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SLOPE_BSEC_FLOOR_CEILING] = {EV_STATIC_SLOPE_PARAM, {2, 2, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SLOPE_FRONTCEILING_TAG] = {EV_STATIC_SLOPE_PARAM_TAG, {0, 0, 0, 0, 0}, TagSecond};
   gMapping[EV_STATIC_SLOPE_FRONTFLOORCEILING_TAG] = {EV_STATIC_SLOPE_PARAM_TAG, {0, 0, 0, 0, 0}, TagFirstSecond};
   gMapping[EV_STATIC_SLOPE_FRONTFLOOR_BACKCEILING] = {EV_STATIC_SLOPE_PARAM, {1, 2, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SLOPE_FRONTFLOOR_TAG] = {EV_STATIC_SLOPE_PARAM_TAG, {0, 0, 0, 0, 0}};
   gMapping[EV_STATIC_SLOPE_FSEC_CEILING] = {EV_STATIC_SLOPE_PARAM, {0, 1, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SLOPE_FSEC_FLOOR] = {EV_STATIC_SLOPE_PARAM, {1, 0, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_SLOPE_FSEC_FLOOR_CEILING] = {EV_STATIC_SLOPE_PARAM, {1, 1, 0, 0, 0}, NoTag};
   gMapping[EV_STATIC_TRANSFER_HEIGHTS] = {EV_STATIC_TRANSFER_HEIGHTS};
   gMapping[EV_STATIC_TRANSLUCENT] = {0, {0, 0, 0, 0, 0}, 0, &LinedefConversion::TranslucentLine};
   gMapping[EV_STATIC_WIND_CONTROL] = {EV_STATIC_WIND_CONTROL_PARAM, {0, 0, 0, 1, 0}};
}

void InitExtraDataMappings()
{
   gEDMapping["acs_execute"] = ACS_Execute;
   gEDMapping["acs_executealways"] = ACS_ExecuteAlways;
   gEDMapping["acs_executewithresult"] = ACS_ExecuteWithResult;
   gEDMapping["acs_lockedexecute"] = ACS_LockedExecute;
   gEDMapping["acs_lockedexecutedoor"] = ACS_LockedExecuteDoor;
   gEDMapping["acs_suspend"] = ACS_Suspend;
   gEDMapping["acs_terminate"] = ACS_Terminate;
   gEDMapping["ceiling_crushandraise"] = Ceiling_CrushAndRaise;
   gEDMapping["ceiling_crushandraisea"] = Ceiling_CrushAndRaiseA;
   gEDMapping["ceiling_crushandraisedist"] = Ceiling_CrushAndRaiseDist;
   gEDMapping["ceiling_crushandraisesilenta"] = Ceiling_CrushAndRaiseSilentA;
   gEDMapping["ceiling_crushandraisesilentdist"] = Ceiling_CrushAndRaiseSilentDist;
   gEDMapping["ceiling_crushraiseandstay"] = Ceiling_CrushRaiseAndStay;
   gEDMapping["ceiling_crushraiseandstaya"] = Ceiling_CrushRaiseAndStayA;
   gEDMapping["ceiling_crushraiseandstaysila"] = Ceiling_CrushRaiseAndStaySilA;
   gEDMapping["ceiling_crushstop"] = Ceiling_CrushStop;
   gEDMapping["ceiling_lowerandcrush"] = Ceiling_LowerAndCrush;
   gEDMapping["ceiling_lowerandcrushdist"] = Ceiling_LowerAndCrushDist;
   gEDMapping["ceiling_lowerbytexture"] = Ceiling_LowerByTexture;
   gEDMapping["ceiling_lowerbyvalue"] = Ceiling_LowerByValue;
   gEDMapping["ceiling_lowerinstant"] = Ceiling_LowerInstant;
   gEDMapping["ceiling_lowertofloor"] = Ceiling_LowerToFloor;
   gEDMapping["ceiling_lowertohighestfloor"] = Ceiling_LowerToHighestFloor;
   gEDMapping["ceiling_lowertolowest"] = Ceiling_LowerToLowest;
   gEDMapping["ceiling_lowertonearest"] = Ceiling_LowerToNearest;
   gEDMapping["ceiling_movetovalue"] = Ceiling_MoveToValue;
   gEDMapping["ceiling_raisebytexture"] = Ceiling_RaiseByTexture;
   gEDMapping["ceiling_raisebyvalue"] = Ceiling_RaiseByValue;
   gEDMapping["ceiling_raiseinstant"] = Ceiling_RaiseInstant;
   gEDMapping["ceiling_raisetohighest"] = Ceiling_RaiseToHighest;
   gEDMapping["ceiling_raisetohighestfloor"] = Ceiling_RaiseToHighestFloor;
   gEDMapping["ceiling_raisetolowest"] = Ceiling_RaiseToLowest;
   gEDMapping["ceiling_raisetonearest"] = Ceiling_RaiseToNearest;
   gEDMapping["ceiling_tofloorinstant"] = Ceiling_ToFloorInstant;
   gEDMapping["ceiling_tohighestinstant"] = Ceiling_ToHighestInstant;
   gEDMapping["ceiling_waggle"] = Ceiling_Waggle;
   gEDMapping["changeskill"] = ChangeSkill;
   gEDMapping["damagething"] = DamageThing;
   gEDMapping["door_close"] = Door_Close;
   gEDMapping["door_closewaitopen"] = Door_CloseWaitOpen;
   gEDMapping["door_lockedraise"] = Door_LockedRaise;
   gEDMapping["door_open"] = Door_Open;
   gEDMapping["door_raise"] = Door_Raise;
   gEDMapping["door_waitclose"] = Door_WaitClose;
   gEDMapping["door_waitraise"] = Door_WaitRaise;
   gEDMapping["elevator_lowertonearest"] = Elevator_LowerToNearest;
   gEDMapping["elevator_movetofloor"] = Elevator_MoveToFloor;
   gEDMapping["elevator_raisetonearest"] = Elevator_RaiseToNearest;
   gEDMapping["exit_normal"] = Exit_Normal;
   gEDMapping["exit_secret"] = Exit_Secret;
   gEDMapping["floor_crushstop"] = Floor_CrushStop;
   gEDMapping["floor_donut"] = Floor_Donut;
   gEDMapping["floor_lowerbytexture"] = Floor_LowerByTexture;
   gEDMapping["floor_lowerbyvalue"] = Floor_LowerByValue;
   gEDMapping["floor_lowerinstant"] = Floor_LowerInstant;
   gEDMapping["floor_lowertohighest"] = Floor_LowerToHighest;
   gEDMapping["floor_lowertohighestee"] = Floor_LowerToHighestEE;
   gEDMapping["floor_lowertolowest"] = Floor_LowerToLowest;
   gEDMapping["floor_lowertolowestceiling"] = Floor_LowerToLowestCeiling;
   gEDMapping["floor_lowertonearest"] = Floor_LowerToNearest;
   gEDMapping["floor_movetovalue"] = Floor_MoveToValue;
   gEDMapping["floor_raiseandcrush"] = Floor_RaiseAndCrush;
   gEDMapping["floor_raisebytexture"] = Floor_RaiseByTexture;
   gEDMapping["floor_raisebyvalue"] = Floor_RaiseByValue;
   gEDMapping["floor_raiseinstant"] = Floor_RaiseInstant;
   gEDMapping["floor_raisetoceiling"] = Floor_RaiseToCeiling;
   gEDMapping["floor_raisetohighest"] = Floor_RaiseToHighest;
   gEDMapping["floor_raisetolowest"] = Floor_RaiseToLowest;
   gEDMapping["floor_raisetolowestceiling"] = Floor_RaiseToLowestCeiling;
   gEDMapping["floor_raisetonearest"] = Floor_RaiseToNearest;
   gEDMapping["floor_toceilinginstant"] = Floor_ToCeilingInstant;
   gEDMapping["floor_transfernumeric"] = Floor_TransferNumeric;
   gEDMapping["floor_transfertrigger"] = Floor_TransferTrigger;
   gEDMapping["floor_waggle"] = Floor_Waggle;
   gEDMapping["floorandceiling_lowerbyvalue"] = FloorAndCeiling_LowerByValue;
   gEDMapping["floorandceiling_lowerraise"] = FloorAndCeiling_LowerRaise;
   gEDMapping["floorandceiling_raisebyvalue"] = FloorAndCeiling_RaiseByValue;
   gEDMapping["generic_ceiling"] = Generic_Ceiling;
   gEDMapping["generic_crusher"] = Generic_Crusher;
   gEDMapping["generic_floor"] = Generic_Floor;
   gEDMapping["healthing"] = HealThing;
   gEDMapping["light_changetovalue"] = Light_ChangeToValue;
   gEDMapping["light_fade"] = Light_Fade;
   gEDMapping["light_flicker"] = Light_Flicker;
   gEDMapping["light_glow"] = Light_Glow;
   gEDMapping["light_lowerbyvalue"] = Light_LowerByValue;
   gEDMapping["light_maxneighbor"] = Light_MaxNeighbor;
   gEDMapping["light_minneighbor"] = Light_MinNeighbor;
   gEDMapping["light_raisebyvalue"] = Light_RaiseByValue;
   gEDMapping["light_strobe"] = Light_Strobe;
   gEDMapping["light_strobedoom"] = Light_StrobeDoom;
   gEDMapping["line_horizon"] = Line_Horizon;
   gEDMapping["line_quickportal"] = Line_QuickPortal;
   gEDMapping["line_setidentification"] = Line_SetIdentification;
   gEDMapping["line_setportal"] = Line_SetPortal;
   gEDMapping["pillar_build"] = Pillar_Build;
   gEDMapping["pillar_buildandcrush"] = Pillar_BuildAndCrush;
   gEDMapping["pillar_open"] = Pillar_Open;
   gEDMapping["plane_align"] = Plane_Align;
   gEDMapping["plane_copy"] = Plane_Copy;
   gEDMapping["plat_downbyvalue"] = Plat_DownByValue;
   gEDMapping["plat_downwaitupstay"] = Plat_DownWaitUpStay;
   gEDMapping["plat_downwaitupstaylip"] = Plat_DownWaitUpStayLip;
   gEDMapping["plat_perpetualraise"] = Plat_PerpetualRaise;
   gEDMapping["plat_perpetualraiselip"] = Plat_PerpetualRaiseLip;
   gEDMapping["plat_raiseandstaytx0"] = Plat_RaiseAndStayTx0;
   gEDMapping["plat_stop"] = Plat_Stop;
   gEDMapping["plat_toggleceiling"] = Plat_ToggleCeiling;
   gEDMapping["plat_upbyvalue"] = Plat_UpByValue;
   gEDMapping["plat_upbyvaluestaytx"] = Plat_UpByValueStayTx;
   gEDMapping["plat_upwaitdownstay"] = Plat_UpWaitDownStay;
   gEDMapping["pointpush_setforce"] = PointPush_SetForce;
   gEDMapping["polyobj_doorslide"] = Polyobj_DoorSlide;
   gEDMapping["polyobj_doorswing"] = Polyobj_DoorSwing;
   gEDMapping["polyobj_explicitline"] = Polyobj_ExplicitLine;
   gEDMapping["polyobj_move"] = Polyobj_Move;
   gEDMapping["polyobj_moveto"] = Polyobj_MoveTo;
   gEDMapping["polyobj_movetospot"] = Polyobj_MoveToSpot;
   gEDMapping["polyobj_or_move"] = Polyobj_OR_Move;
   gEDMapping["polyobj_or_moveto"] = Polyobj_OR_MoveTo;
   gEDMapping["polyobj_or_movetospot"] = Polyobj_OR_MoveToSpot;
   gEDMapping["polyobj_or_rotateleft"] = Polyobj_OR_RotateLeft;
   gEDMapping["polyobj_or_rotateright"] = Polyobj_OR_RotateRight;
   gEDMapping["polyobj_rotateleft"] = Polyobj_RotateLeft;
   gEDMapping["polyobj_rotateright"] = Polyobj_RotateRight;
   gEDMapping["polyobj_startline"] = Polyobj_StartLine;
   gEDMapping["polyobj_stop"] = Polyobj_Stop;
   gEDMapping["portal_define"] = Portal_Define;
   gEDMapping["radius_quake"] = Radius_Quake;
   gEDMapping["scroll_ceiling"] = Scroll_Ceiling;
   gEDMapping["scroll_floor"] = Scroll_Floor;
   gEDMapping["scroll_texture_down"] = Scroll_Texture_Down;
   gEDMapping["scroll_texture_left"] = Scroll_Texture_Left;
   gEDMapping["scroll_texture_model"] = Scroll_Texture_Model;
   gEDMapping["scroll_texture_offsets"] = Scroll_Texture_Offsets;
   gEDMapping["scroll_texture_right"] = Scroll_Texture_Right;
   gEDMapping["scroll_texture_up"] = Scroll_Texture_Up;
   gEDMapping["sector_attach3dmidtex"] = Sector_Attach3dMidtex;
   gEDMapping["sector_changesound"] = Sector_ChangeSound;
   gEDMapping["sector_setceilingpanning"] = Sector_SetCeilingPanning;
   gEDMapping["sector_setcurrent"] = Sector_SetCurrent;
   gEDMapping["sector_setfloorpanning"] = Sector_SetFloorPanning;
   gEDMapping["sector_setfriction"] = Sector_SetFriction;
   gEDMapping["sector_setportal"] = Sector_SetPortal;
   gEDMapping["sector_setrotation"] = Sector_SetRotation;
   gEDMapping["sector_setwind"] = Sector_SetWind;
   gEDMapping["stairs_builddowndoom"] = Stairs_BuildDownDoom;
   gEDMapping["stairs_builddowndoomsync"] = Stairs_BuildDownDoomSync;
   gEDMapping["stairs_buildupdoom"] = Stairs_BuildUpDoom;
   gEDMapping["stairs_buildupdoomcrush"] = Stairs_BuildUpDoomCrush;
   gEDMapping["stairs_buildupdoomsync"] = Stairs_BuildUpDoomSync;
   gEDMapping["static_init"] = Static_Init;
   gEDMapping["teleport"] = Teleport;
   gEDMapping["teleport_endgame"] = Teleport_EndGame;
   gEDMapping["teleport_line"] = Teleport_Line;
   gEDMapping["teleport_newmap"] = Teleport_NewMap;
   gEDMapping["teleport_nofog"] = Teleport_NoFog;
   gEDMapping["thing_activate"] = Thing_Activate;
   gEDMapping["thing_changetid"] = Thing_ChangeTID;
   gEDMapping["thing_damage"] = Thing_Damage;
   gEDMapping["thing_deactivate"] = Thing_Deactivate;
   gEDMapping["thing_destroy"] = Thing_Destroy;
   gEDMapping["thing_projectile"] = Thing_Projectile;
   gEDMapping["thing_projectilegravity"] = Thing_ProjectileGravity;
   gEDMapping["thing_raise"] = Thing_Raise;
   gEDMapping["thing_remove"] = Thing_Remove;
   gEDMapping["thing_spawn"] = Thing_Spawn;
   gEDMapping["thing_spawnnofog"] = Thing_SpawnNoFog;
   gEDMapping["thing_stop"] = Thing_Stop;
   gEDMapping["thrustthing"] = ThrustThing;
   gEDMapping["thrustthingz"] = ThrustThingZ;
   gEDMapping["transfer_ceilinglight"] = Transfer_CeilingLight;
   gEDMapping["transfer_floorlight"] = Transfer_FloorLight;
   gEDMapping["transfer_heights"] = Transfer_Heights;
}

//
// Gets the special number from a name
//
UdmfSpecial GetSpecialByName(const char *name)
{
   std::string lowerName = LowerCase(name);
   return gEDMapping[lowerName];
}

//
// Returns the UDMF special info if available
//
const UdmfSpecialTarget *GetUDMFSpecial(int special)
{
   auto it = gMapping.find(special);
   if(it == gMapping.end())
      return nullptr;
   return &it->second;
}
